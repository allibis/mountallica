#!/bin/bash

loadkeys it
echo CIAO,VUOI INSTALLARE ARCH?
read ans

if [[ $ans == y ]] || [[ $ans == yes ]] || [[ $ans == '' ]]; then
	echo hai partizionato?
	read ans
	while [ $ans == n ] || [ $ans == no ] 
       	do
		sudo fdisk -l  
		echo scegli il device 
		read dev
		if ! sudo cfdisk $dev ; then
			sudo cfdisk /dev/$dev
		
		fi
		sudo fdisk -l
		echo vanno bene le partizioni?
		read ans
	done
	fdisk -l
	echo
	echo scegli la partizione di root
	read root
	if ! mkfs.ext4 /dev/$root >&/dev/null; then mkfs.ext4 $root; fi
	if ! mount /dev/$root /mnt >&/dev/null; then mount $root /mnt; fi
	echo vuoi installare /home in una partizione separata?
	read ans
	if [[ $ans == y ]] || [[ $ans == yes ]] || [[ $ans == '' ]]; then
		echo scegli partizione 
		read home
		echo vuoi formattarla?
		read ans
		if [[ $ans == y ]] || [[ $ans == yes ]] || [[ $ans == '' ]]; then
			if ! mkfs.ext4 /dev/$home >&/dev/null; then
				mkfs.ext4 $home
				mkdir /mnt/home
				mount $home /mnt/home
			else
				mkdir /mnt/home
				mount /dev/$home /mnt/home
			fi
		else
			mkdir /mnt/home
			if ! mount /dev/$home /mnt/home; then mount $home /mnt/home; fi
		fi
	fi
	echo vuoi montare /boot in una partizione separata?
	read ans
	if [[ $ans == 'y' ]] || [[ $ans == 'yes' ]] || [[ $ans == '' ]]; then
		bootpart=true
		mkdir /mnt/boot
		echo scegli la partizione
		read boot
		if ! mkfs.vfat -F32 /dev/$boot >&/dev/null; then
			mkfs.vfat -F32 $boot 
		       	mount $boot /mnt/boot
		else
			mount /dev/$boot /mnt/boot
		fi
	fi
	echo hai creato una partizione swap?
	read ans
	if [[ $ans == 'y' ]] || [[ $ans == 'yes' ]] || [[ $ans == '' ]]; then 
		echo scegli la partizione
		read swap
		if ! mkswap /dev/$swap; then
			mkswap $swap
			swapon $swap
		else
			swapon /dev/$swap
		fi
	fi
	echo vuoi modificare il mirrorlist di pacman?
	read ans 
	if [[ $ans == 'y' ]] || [[ $ans == 'yes' ]] || [[ $ans == '' ]]; then nano /etc/pacman.d/mirrorlist; fi
	echo che connessione hai? wifi o ethernet?
	read connection
	if [[ $connection == wifi ]]; then 
		wifi-menu
		typeinterface=wifi
	elif [[ $connection == ethernet ]]; then
		ctrl=0
		while [ $ctrl == 0 ]
		do
			ifconfig -a
			echo "scegli un' interfaccia valida"
			read interface
			ifconfig $interface up
			if ping 8.8.8.8 >&/dev/null; then
				typeinterface=eth
			fi
		done
	fi
	pacstrap /mnt base base-devel net-tools netctl dialog iw wpa_supplicant grub
	genfstab -U /mnt > /mnt/etc/fstab
	sed s/none/swap/g /mnt/etc/fstab
	wget https://raw.githubusercontent.com/allibis/mountallica/master/aurdown/aurdown.sh && cp aurdown.sh /mnt/bin/aurdown
	echo '
	pacman -Scc --noconfirm >&/dev/null
	echo bene, inserisci una password per il root
	passwd 
	if [ -d /sys/efi/efivars ]; then
		chattr -i /boot/grub/i386-pc/core.img
		grub-install --target=i386-pc --recheck --debug --force /dev/sda
		chattr +i /boot/grub/i386-pc/core.img
	else
		grub-install --target=i386-pc --recheck --debug /dev/sda
		ctrl=1
	fi
	grub-mkconfig -o /boot/grub/grub.cfg
	echo come vuoi chiamare il sistema?
	read hostname
	echo $hostname > /etc/hostname
	echo it_IT.UTF-8 UTF-8 >> /etc/locale.gen
	locale-gen
	echo LANG=it_IT.UTF-8 >> /etc/locale.conf
	echo KEYMAP=it >> /etc/vconsole.conf
	ln -sf /usr/share/zoneinfo/Europe/Rome /etc/localtime
	echo "127.0.1.1        $hostname.localdomain        $hostname" >> /etc/hosts
	if [[ $typeinterface == wifi ]] ; then 
		wifi-menu
	else 
		systemctl enable dhcpcd.service
	fi
	pacman -Sy xorg-server xorg-xinit
	echo che driver video hai? INTEL, AMD O NVIDIA?
	ctrl=0
	while [ $ctrl == 0 ] 
	do
		read driver
		if [[ $driver == amd ]] || [[ $driver == AMD ]] ; then 
			pacman -S  xf86-video-ati xf86-video-amdgpu && ctrl=1
		elif [[ $driver == intel ]] || [[ $driver  == INTEL ]] ; then 
			pacman -S xf86-video-intel && ctrl=1
		elif [[ $driver == nvidia ]] || [[ $driver == NVIDIA ]] ; then 
			pacman -S xf86-video-nouveau && ctrl=1
		else 
			echo inserisci un driver valido
		fi
	done
	pacman -Scc --noconfirm >&/dev/null
	sudo pacman -S mesa
	echo che shell vuoi usare?
	ctrl=0
	while [ $ctrl == 0 ]
	do
		read shell
		if ! pacman -S $shell; then 
			echo inserisci una bash valida
		else
			ctrl=1 
		fi
	done
	echo inserisci il nome utente 
	read name
	useradd -m $name -s /bin/$shell
	passwd $name
	echo che editor cli preferisci?
	ctrl=0
	while [ $ctrl == 0 ]
	do 
		read editor
		if pacman -S $editor; then
			echo export EDITOR=$editor > ~/.bashrc
			ctrl=1
		else
			echo inserisci un editor valido
		fi
	done
	pacman -Scc --noconfirm >&/dev/null
	echo bene, adesso bisogna modificare il file /etc/sudoers per utilizzare sudo
	echo decommenta la riga "%wheel ALL=(ALL) ALL" per usare sudo con la password dell user
	echo decommenta la riga "%wheel ALL=(ALL) NOPASSWD: ALL" per usare sudo senza password
	${editor} /etc/sudoers
	echo vuoi installare un DE?
	read ans
	if [[ $ans == y ]] || [[ $ans == yes ]] || [[ $ans == "" ]]; then
		echo quale?
		ctrl=0
		while [ $ctrl == 0 ]
		do
			read de
			if ! pacman -S $de >&/dev/null; then
				echo inserisci un DE valido
			else
				ctrl=1
			fi
		done
	fi
	pacman -Scc --noconfirm >&/dev/null
	echo che DM vuoi installare?
	ctrl=0
	while [ $ctrl == 0 ]
	do
		read dm
		if ! pacman -S $dm; then
			echo inserisci un DM valido
		else
			systemctl enable $dm
			ctrl=1
		fi
	done
	pacman -Scc --noconfirm >&/dev/null
	echo vuoi installare altre cose?
	read ans
	if [[ $ans == y ]] || [[ $ans == yes ]] || [[ $ans == '' ]]; then
		ctrl=0
		while [ $ctrl == 0 ]
		do
			echo scrivi i pacchetti che vuoi installare
			read pkgs
			pacman -S $pkgs
			echo finito?
			read ans
			if [[ $ans == y ]] || [[ $ans == yes ]] || [[ $ans == "" ]]; then
				ctrl=1
			fi
		done
	fi' > /mnt/next.sh
	arch-chroot /mnt chmod +rx /next.sh
	arch-chroot /mnt sh /next.sh
	echo "Bene! L'installazione Ã¨ finita. Vuoi spegnere il pc?"
	read ans
	if [[ $ans == 'y' ]] || [[ $ans == 'yes' ]] || [[ $ans == '' ]]; then
		poweroff
	fi
else
	echo 'okay :('
fi
exit
